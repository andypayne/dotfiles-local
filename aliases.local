bkgd() {
  "$@" &
}

# OS dependent options
case `uname` in
  Darwin)
    alias ls='ls -lrtaFG'
    alias kill_audio="sudo kill -9 `ps ax|grep 'coreaudio[a-z]' | awk '{print $1}'`"
  ;;
  Linux)
    alias ls='ls -alFG --color'
    alias o='bkgd nautilus "$@"'
    alias psb='ps -auxfwww | bat'
  ;;
esac

# Git
alias glog='git log --pretty --graph --oneline --all'
alias gd="git diff --ignore-all-space --ignore-space-at-eol --ignore-space-change --ignore-blank-lines -- . ':(exclude)*package-lock.json'"
alias gb='git branch --list -a | more'
alias gupsubs='git submodule foreach git pull origin master'

# History
alias h='history 1'

jsonpp() {
  python -mjson.tool "$@"
}

# Validate jsonlines files.
validate_jsonlines() {
  cat "$@" | python -c 'import sys;import json;[None for line in sys.stdin if json.loads(line)]'
}

# ripgrep - find filenames that match a pattern (not file contents)
rgf() {
  rg --files | rg "$@"
}

# tmux restore
# NOTE - relies on $TMUX_DIR
alias mux='pgrep -vx tmux > /dev/null && \
           tmux new -d -s delete-me && \
           tmux run-shell $TMUX_DIR/plugins/tmux-resurrect/scripts/restore.sh && \
           tmux kill-session -t delete-me && \
           tmux attach || tmux attach'

# For AWS Elastic Beanstalk node log tailing
alias eblog='eb ssh --command "tail -f /var/log/nodejs/nodejs.log"'

# Watch GPU memory
alias wgpu='watch -d -n 1 nvidia-smi'

# sox, for bytebeats
alias tosox='sox -r 8000 -b 8 -c 1 -t raw -e signed-integer - -d'

# http://cheat.sh/
cheat() {
  curl cheat.sh/"$@" | bat
}

# Note: Aliases work fine for standalone use, but they won't work for fzf
# integration (FZF_CTRL_T_COMMAND, etc). So use symlinks to ~/bin/... for that.
# fd (fdfind) - https://github.com/sharkdp/fd
#if command -v "fdfind" > /dev/null 2>&1; then
#  alias fd=`command -v fdfind`
#fi
# bat (batcat) - https://github.com/sharkdp/bat
#if command -v "batcat" > /dev/null 2>&1; then
#  alias bat=`command -v batcat`
#fi

if command -v "fzf" > /dev/null 2>&1; then
  # fshow - git commit browser
  fshow() {
    git log --graph --color=always \
        --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
    fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
        --bind "ctrl-m:execute:
                  (grep -o '[a-f0-9]\{7\}' | head -1 |
                  xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
                  {}
  FZF-EOF"
  }

  if command -v "rg" > /dev/null 2>&1; then
    # https://github.com/junegunn/fzf/wiki/examples#searching-file-contents
    fif() {
      if [ ! "$#" -gt 0 ]; then echo "Need a string to search for!"; return 1; fi
      rg --files-with-matches --no-messages "$1" | fzf --preview "highlight -O ansi -l {} 2> /dev/null | rg --colors 'match:bg:yellow' --ignore-case --pretty --context 10 '$1' || rg --ignore-case --pretty --context 10 '$1' {}"
    }
  fi

fi

# Cycle python virtual environments
renv() {
  if [ "type deactivate" == 'deactivate is a shell function from env/bin/activate' ]; then
    deactivate
  fi
  if [[ -f "env/bin/activate" ]]; then
    . ./env/bin/activate
  elif [[ -f "venv/bin/activate" ]]; then
    . ./venv/bin/activate
  fi
}

# ffprobe/ffmpeg to display the duration of a media file
durat() {
  ffprobe \
    -v error \
    -show_entries format=duration \
    -of default=noprint_wrappers=1:nokey=1 \
    -sexagesimal \
    "$@"
}

