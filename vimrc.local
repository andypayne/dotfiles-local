set incsearch
set ignorecase
set smartcase
set hlsearch
set foldlevelstart=20

" Changes from Ubuntu
set conceallevel=2
set visualbell  " Flash the screen instead of sounding an errorbell
let g:vim_markdown_conceal = 1
"highlight CursorLine   cterm=bold,underline
"let maplocalleader = "'"
" Not currently using - map leader to comma -
"let mapleader = ","
set foldlevelstart=20  " Expand folds

" Sometimes I like to lay on my lawn without a shirt on!
nnoremap <Up> k
nnoremap <Down> j
nnoremap <Left> h
nnoremap <Right> l
inoremap <up> k
inoremap <down> j
inoremap <left> h
inoremap <right> l

" column 80 boundary highlight
"highlight OverLength ctermbg=red ctermfg=white guibg=#592929
"match OverLength /\%81v.\+/
" Dim the column 80 colorcolumn a bit
highlight ColorColumn ctermbg=8

" Set the color scheme
"elflord
"industry
"koehler
"pablo
"ron
"torte
"zellner
colorscheme elflord

" Configure ale linting for javascript
let g:ale_linters = {
\   'javascript': ['eslint', 'esnext'],
\}

" Disable ALE
"set ale:ale_enabled 0
"augroup! ale

augroup ale
  autocmd!

  let g:ale_lint_on_text_changed = 0
  let g:ale_lint_on_enter = 0
augroup END

" Don't tab complete or search in these files
set wildignore+=*.a,*.o
set wildignore+=*.bmp,*.gif,*.ico,*.jpg,*.jpeg,*.png,*.svg
set wildignore+=.DS_Store,.git.hg,.svn
set wildignore+=*~,*.swp,*.tmp

" Tagbar
nmap <F8> :TagbarToggle<CR>

" For deoplete
if (has('pythonx'))
  set pyxversion=3
endif

" Show the QuickFix window for errors (enabled for typescript-vim)
autocmd QuickFixCmdPost [^l]* nested cwindow
autocmd QuickFixCmdPost    l* nested lwindow

" For yats.vim - the new regexp engine
" Disabling this for now due to the slowness issue on arrow functions
" (typescriptArrowFuncDef)
"set re=1

" https://github.com/SirVer/ultisnips/issues/512#issuecomment-111733631
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'
" Disable mind-bogglingly annoying identifier completion (?)
let g:ycm_auto_trigger = 0
let g:ycm_min_num_of_chars_for_completion = 99

" For UltiSnips
"let g:UltiSnipsExpandTrigger="<tab>"
"let g:UltiSnipsJumpForwardTrigger="<c-b>"
"let g:UltiSnipsJumpBackwardTrigger="<c-z>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
" :UltiSnipsEdit will split the window
let g:UltiSnipsEditSplit="vertical"

"inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"

" Spell check highlighting colors
highlight clear SpellBad
"highlight SpellBad cterm=underline
highlight SpellBad ctermbg=16

" NERDTree
nmap <leader>ne :NERDTree<cr>

let g:syntastic_python_checkers=['flake8']
let g:syntastic_python_flake8_args=['--max-line-length=120', '--ignore=E501,W391']
let g:syntastic_python_pylint_args = "-d missing-docstring,invalid-name"
let g:pymode_lint_ignore = "E501,W"
let g:syntastic_python_pylint_post_args="--max-line-length=120"
let g:syntastic_aggregate_errors = 1
"ALEDisable
let g:ale_python_flake8_args = '--ignore=E501,E303,E226,E231,E225,E302,E305,E701,E126,E123,E251,E201,E202,E124,E402'
let g:ale_python_flake8_options = '--ignore=E501,E303,E226,E231,E225,E302,E305,E701,E126,E123,E251,E201,E202,E124,E402'


